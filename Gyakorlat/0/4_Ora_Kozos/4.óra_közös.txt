A feladat elkezdéséhez a mellékelt projekt tartalmaz kódokat (main függvény és Datum osztály).
A megoldás során ezekhez a kódokhoz nem kell nyúlni (kivéve ha a feladat kéri), de a teszteléshez a main függvényben a nem használt kódokat ki lehet kommentezni.
Ügyelj arra, hogy minden lefoglalt memória kerüljön megfelelően felszabadításra.
Készíts egy Hatarido osztályt, ami tárolja egy szoftver nevét (egy szöveg, ami akár szóközöket is tartalmazhat), és a különböző verzióihoz tartozó kitűzött határidőket.
Három verzióhoz tárolunk határidőt (Datum típus): alpha, beta, és végső, de nem biztos hogy mindegyik határidőt meghatároztuk (tipp: dinamikusan foglalva kezeljük az időpontokat, három mutatót tárolva).
A konstruktor csak a szoftver nevét várja.
Legyen a névhez és az időpontokhoz lekérdező és beállító függvény (getNev, setNev, getAlphaDatum, setAlphaDatum, getBetaDatum, setBetaDatum, getVegsoDatum, setVegsoDatum).
Legyen a Hatarido osztályban egy statikus adattag is, ami az aktuális dátumot tárolja (ez mindig létezik, nem kell mutató).
Az értéke kezdetben legyen a mai nap.
Legyen hozzá beállító és lekérő függvény (setAktualisDatum, getAktualisDatum).
A Hatarido osztályban legyen egy lejart metódus, amely a kimenetre kiírja az összes olyan határidőt, ami lejárt (a határidő előbb van, mint az aktuális dátum).
Célszerű a Datum osztályt kiegészíteni egy metódussal, ami összehasonlít kettő dátumot.
A bejegyzett határidőket lehessen törölni is egy hataridoTorol metódus segítségével, amely megkapja paraméterben hogy melyik határidőt törölje.
Készíts másoló konstruktort a Hatarido osztályhoz.