// 2.26.2. Demonstr√°lja, hogy a * √©s a & ellent√©tes hat√°s√∫ m≈±veletek! 

// 2.26.2. 


// A kifejez√©s:

// ```c
// printf("The volume of the cube is: %d\n", *&*&volume);
// ```

// val√≥ban **demonstr√°lja, hogy a `*` (dereferencia) √©s a `&` (c√≠mk√©pz√©s) egym√°s inverzei**, azaz "ellent√©tes hat√°s√∫ m≈±veletek".

// ---

// ### üîç Magyar√°zat l√©p√©senk√©nt

// Tegy√ºk fel:

// ```c++
// int volume = 125;
// ```

// A kifejez√©s:

// ```c++
// *&*&volume
// ```

// √≠gy √©rtelmezhet≈ë:

// 1. `&volume` ‚Üí a `volume` v√°ltoz√≥ c√≠me (pl. `0x7ffeefbff5a4`)
// 2. `*&volume` ‚Üí el≈ësz√∂r `&volume`, majd `*` visszaadja a `volume` √©rt√©k√©t, teh√°t `125`
// 3. `*&*&volume` ‚Üí ugyanaz, mint `volume`, hiszen minden `*` √©s `&` p√°r kioltja egym√°st.

// ---

// ### ‚úÖ Teh√°t ez teljesen helyes p√©lda arra, hogy:

// ```cpp
// *&x == x
// ```

// b√°rmilyen v√°ltoz√≥ra `x`.

// ---

// ### P√©lda C++11 verzi√≥ban:

// ```cpp
#include <iostream>
using namespace std;

int main() {
    int volume = 125;
    cout << "The volume of the cube is: " << *&*&volume << endl;
    return 0;
}
// ```

// ---

// Ez a kimenetet adja:

// ```
// The volume of the cube is: 125
// ```

// üí° **√ñsszefoglal√°s**: A `&` √©s a `*` egym√°s ellent√©tei ‚Äì egy v√°ltoz√≥ c√≠m√©t veszed, majd az azon a c√≠men lev≈ë √©rt√©ket olvasod ki.


 